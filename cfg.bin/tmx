#!/bin/sh
set -e

link_or_rm()
{
  local env="$1"
  local tmp="$2"
  if [ -z "${env}" ]; then
    # No auth sock; remove symlink, if any.
    rm -f -- "${tmp}"
  elif [ "${env}" != "${tmp}" ]; then
    # Construct expected symlink to point to auth sock.
    ln -snf -- "${env}" "${tmp}"
  fi
}

eval "name=\$$#"
if [ "$#" -eq "0" ]; then
  echo "Usage: ${0##*/} [tmux-args] session-name"
  echo "wrapper around 'tmux [tmux-args] session-name'"
  exit 1
fi

args=
if [ "$#" -gt 1 ]; then
  args="${@% *}"
fi
attach_args=
if [ "${0##*/}" = "tmxd" ]; then
  attach_args="-d"
fi

# Make the temp directory if it doesn't exist
d="${HOME}/.tmp"
if ! [ -d "${d}" ]; then
  mkdir -m 700 "${d}"
fi

if [ -z "${TMUX}" ]; then
  # Not already in tmux
  s="${name}.${USER}.ssh_auth_sock"
  t="${name}.${USER}.fwd_ssh_auth_sock"
  link_or_rm "${SSH_AUTH_SOCK}" "${d}/${s}"
  link_or_rm "${FWD_SSH_AUTH_SOCK}" "${d}/${t}"
  f="FWD_SSH_AUTH_SOCK=${d}/${t}"
  if [ -z "${FWD_SSH_AUTH_SOCK}" ]; then
    f=""
  fi
  if tmux list-sessions | grep "^${name}:" > /dev/null; then
    exec env SSH_AUTH_SOCK="${d}/${s}" ${f} tmux ${args} attach ${attach_args} -t "${name}"
  else
    exec env SSH_AUTH_SOCK="${d}/${s}" ${f} tmux ${args} new-session -s "${name}"
  fi
else
  echo "Already in a tmux session. Giving up."
  exit 1
fi
